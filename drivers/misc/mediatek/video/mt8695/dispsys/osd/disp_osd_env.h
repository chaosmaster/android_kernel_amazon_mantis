/********************************************************************************************
 *     LEGAL DISCLAIMER
 *
 *     (Header of MediaTek Software/Firmware Release or Documentation)
 *
 *     BY OPENING OR USING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 *     THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE") RECEIVED
 *     FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON AN "AS-IS" BASIS
 *     ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES, EXPRESS OR IMPLIED,
 *     INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
 *     A PARTICULAR PURPOSE OR NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY
 *     WHATSOEVER WITH RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 *     INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK
 *     ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
 *     NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S SPECIFICATION
 *     OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
 *
 *     BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE LIABILITY WITH
 *     RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION,
 *     TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE
 *     FEES OR SERVICE CHARGE PAID BY BUYER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 *     THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE WITH THE LAWS
 *     OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF LAWS PRINCIPLES.
 ************************************************************************************************/

/** @file drv_osd_env.h
 *  This header file declares public function prototypes of OSD.
 */
#ifndef _DRV_OSD_ENV_H_
#define _DRV_OSD_ENV_H_

#include "disp_type.h"

#define OSD_TBL_NUM  10
#define OSD_FMT_REG 28
#define OSD_CORE_REG 8
#define OSD_SCALER_REG 8
#define OSD_SC_STEP_BIT                14
#define OSD_SC_STEP_BASE               0x4000
#define OSD_DEFAULT_LPF_C1             2
#define OSD_DEFAULT_LPF_C2             -3
#define OSD_DEFAULT_LPF_C3             -7
#define OSD_DEFAULT_LPF_C4             28
#define OSD_DEFAULT_LPF_C5             88

#define OSD_MAIN_PATH   0

#define OSD_MODE_PANEL_AUO_B089AW01_WIDTH  1024
#define OSD_MODE_PANEL_AUO_B089AW01_HEIGHT  600

#define OSD_MODE_640_480_WIDTH	640
#define OSD_MODE_640_480_HEIGHT	480

typedef struct _PATH_OFFSET_T {
	INT32 i4HSWidth;
	INT32 i4VSWidth;
	BOOL fgRisingEdge;
} PATH_OFFSET_T;

typedef struct _POSITION_OFFSET_T {
	INT16 i4XOffset;
	INT16 i4YOffset;
	INT16 i4EvenYOffset;
} POSITION_OFFSET_T;

typedef struct _DISP_OFFSET_T {
	INT32 i4HsWidth;
	INT32 i4VsWidth;
	INT32 i4YOffset;
	INT32 i4EvenYOffset;
} DISP_OFFSET_T;

typedef struct _OFFSET_TABLE_T {
	POSITION_OFFSET_T rCsr;
	POSITION_OFFSET_T rOSD5;
	POSITION_OFFSET_T rOSD4;
	POSITION_OFFSET_T rOSD3;
	POSITION_OFFSET_T rOSD2;
	POSITION_OFFSET_T rOSD1;
	POSITION_OFFSET_T rVDP2;
	POSITION_OFFSET_T rVDP1;
} OFFSET_TABLE_T;

typedef struct _OSD_OFFSET_TABLE_T {
	POSITION_OFFSET_T rOSD5;
	POSITION_OFFSET_T rOSD4;
	POSITION_OFFSET_T rOSD3;
	POSITION_OFFSET_T rOSD2;
	POSITION_OFFSET_T rOSD1;
	PATH_OFFSET_T rPath;
} OSD_OFFSET_TABLE_T;

typedef struct _OSD_SCALE_INFO {
	UINT32 u4Enable;
	UINT32 u4SrcW;
	UINT32 u4SrcH;
	UINT32 u4DstW;
	UINT32 u4DstH;
	UINT32 dst_x;
	UINT32 dst_y;
	UINT32 u4DispMode;
} OSD_SCALE_INFO;

extern OFFSET_TABLE_T rLocationOffset[];
extern UINT32 _au4OsdFmtResoTbl[OSD_TBL_NUM][28];
extern UINT32 _au4OsdCoreResoTbl[OSD_TBL_NUM][8];
extern UINT32 _au4OsdScalerResoTbl[OSD_TBL_NUM][8];
extern unsigned long _au4OSDFmtReg[];
extern unsigned long _au4OSD2ScalerReg[];
extern unsigned long _au4OSD2CoreReg[];
extern unsigned long _au4OSD3ScalerReg[];
extern unsigned long _au4OSD3CoreReg[];

#endif
